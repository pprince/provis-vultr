### Localization

# Preseeding only locale sets language, country and locale.
d-i debian-installer/locale string en_US

# Keyboard selection.
d-i keyboard-configuration/xkb-keymap select us


### Network configuration

# Force DHCP via eth0; ignore other devices.
d-i netcfg/choose_interface select eth0

# Any hostname and domain names assigned from dhcp take precedence over
# values set here. However, setting the values still prevents the questions
# from being shown, even if values come from dhcp.
d-i netcfg/get_hostname string unassigned-hostname
d-i netcfg/get_domain string unassigned-domain

# If you want to force a hostname, regardless of what either the DHCP
# server returns or what the reverse DNS entry for the IP is, uncomment
# and adjust the following line.
#d-i netcfg/hostname string somehost

# Disable that annoying WEP key dialog.
d-i netcfg/wireless_wep string

# The wacky dhcp hostname that some ISPs use as a password of sorts.
#d-i netcfg/dhcp_hostname string radish

# If non-free firmware is needed for the network or other hardware, you can
# configure the installer to always try to load it, without prompting. Or
# change to false to disable asking.
d-i hw-detect/load_firmware boolean false


### Network console

### Mirror settings
d-i mirror/country string manual
d-i mirror/http/hostname string http.us.debian.org
d-i mirror/http/directory string /debian
d-i mirror/http/proxy string


### Account setup

# Don't configure the root passwd.  Disables root passwd logins.
# Instead, a normal user (below) will be given access to use sudo.
d-i passwd/root-login boolean false
d-i passwd/user-fullname string Provisioning System
d-i passwd/username string provis
d-i passwd/user-password-crypted password !invalid



### Clock and time zone setup

# Controls whether or not the hardware clock is set to UTC.
d-i clock-setup/utc boolean true

# You may set this to any valid setting for $TZ; see the contents of
# /usr/share/zoneinfo/ for valid values.
d-i time/zone string US/Eastern

# Controls whether to use NTP to set the clock during the install
d-i clock-setup/ntp boolean true
# NTP server to use. The default is almost always fine here.
#d-i clock-setup/ntp-server string ntp.example.com


### Partitioning

# If there is only one disk, we don't need to specify this, but if
# there were more than one for some reason, the installer would ask.
d-i partman-auto/disk string /dev/vda

# Partition type: "regular", "lvm", or "crypto" (lvm-within-crypto).
d-i partman-auto/method string regular

# If one of the disks that are going to be automatically partitioned
# contains an old LVM configuration, the user will normally receive a
# warning. This can be preseeded away...
d-i partman-lvm/device_remove_lvm boolean true
# The same applies to pre-existing software RAID array:
d-i partman-md/device_remove_md boolean true
# And the same goes for the confirmation to write the lvm partitions.
d-i partman-lvm/confirm boolean true
d-i partman-lvm/confirm_nooverwrite boolean true

# You can choose one of the three predefined partitioning recipes:
# - atomic: all files in one partition
# - home:   separate /home partition
# - multi:  separate /home, /var, and /tmp partitions
d-i partman-auto/choose_recipe select atomic

# Or provide a recipe of your own...
# If you have a way to get a recipe file into the d-i environment, you can
# just point at it.
#d-i partman-auto/expert_recipe_file string /hd-media/recipe

# If not, you can put an entire recipe into the preconfiguration file in one
# (logical) line. This example creates a small /boot partition, suitable
# swap, and uses the rest of the space for the root partition:
#d-i partman-auto/expert_recipe string                         \
#      boot-root ::                                            \
#              40 50 100 ext3                                  \
#                      $primary{ } $bootable{ }                \
#                      method{ format } format{ }              \
#                      use_filesystem{ } filesystem{ ext3 }    \
#                      mountpoint{ /boot }                     \
#              .                                               \
#              500 10000 1000000000 ext3                       \
#                      method{ format } format{ }              \
#                      use_filesystem{ } filesystem{ ext3 }    \
#                      mountpoint{ / }                         \
#              .                                               \
#              64 512 300% linux-swap                          \
#                      method{ swap } format{ }                \
#              .

# The full recipe format is documented in the file partman-auto-recipe.txt
# included in the 'debian-installer' package or available from D-I source
# repository. This also documents how to specify settings such as file
# system labels, volume group names and which physical devices to include
# in a volume group.

# This makes partman automatically partition without confirmation, provided
# that you told it what to do using one of the methods above.
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true
d-i partman-md/confirm boolean true

## Controlling how partitions are mounted
# Default is UUID; can also be "traditional" or "label".
#d-i partman/mount_style select uuid


### Base system installation

# The kernel image (meta) package to be installed.
d-i base-installer/kernel/image string linux-image-amd64


### Apt setup

# You can choose to install non-free and contrib software.
#d-i apt-setup/non-free boolean true
#d-i apt-setup/contrib boolean true
# Uncomment this if you don't want to use a network mirror.
#d-i apt-setup/use_mirror boolean false
# Select which update services to use; define the mirrors to be used.
# Values shown below are the normal defaults.
#d-i apt-setup/services-select multiselect security, updates
#d-i apt-setup/security_host string security.debian.org

# Additional repositories (local[0-9] available)
d-i apt-setup/local0/repository string \
    http://repo.saltstack.com/apt/debian/8/amd64/latest jessie main
# Comment.
d-i apt-setup/local0/comment string SaltStack official repository
# URL to the repository's public key
d-i apt-setup/local0/key string \
    http://repo.saltstack.com/apt/debian/8/amd64/latest/SALTSTACK-GPG-KEY.pub
# Whether or not to enable deb-src linesfor this repository.
d-i apt-setup/local0/source boolean false


### Package selection

#tasksel tasksel/first multiselect standard, web-server, kde-desktop
#
# maybe this is what I want ???
# tasksel multiselect standard, ssh-server

# Individual additional packages to install
d-i pkgsel/include string sudo openssh-server

# Whether to upgrade packages after debootstrap.
# Allowed values: none, safe-upgrade, full-upgrade
#d-i pkgsel/upgrade select none


popularity-contest popularity-contest/participate boolean false


### Boot loader installation

d-i grub-installer/only_debian boolean true
d-i grub-installer/with_other_os boolean true
d-i grub-installer/bootdev  string /dev/vda


### Finishing up the installation

# Avoid that last message about the install being complete.
d-i finish-install/reboot_in_progress note

# This is how to make the installer shutdown when finished, but not
# reboot into the installed system.
d-i debian-installer/exit/halt boolean true
# This will power off the machine instead of just halting it.
d-i debian-installer/exit/poweroff boolean true


### Preseeding other packages


#### Advanced options

### Running custom commands during the installation
# d-i preseeding is inherently not secure. Nothing in the installer checks
# for attempts at buffer overflows or other exploits of the values of a
# preconfiguration file like this one. Only use preconfiguration files from
# trusted locations! To drive that home, and because it's generally useful,
# here's a way to run any shell command you'd like inside the installer,
# automatically.

# This first command is run as early as possible, just after
# preseeding is read.
#d-i preseed/early_command string anna-install some-udeb
# This command is run immediately before the partitioner starts. It may be
# useful to apply dynamic partitioner preseeding that depends on the state
# of the disks (which may not be visible when preseed/early_command runs).
#d-i partman/early_command \
#       string debconf-set partman-auto/disk "$(list-devices disk | head -n1)"

# This command is run just before the install finishes, but when there is
# still a usable /target directory. You can chroot to /target and use it
# directly, or use the apt-install and in-target commands to easily install
# packages and run commands in the target system.
#d-i preseed/late_command string apt-install zsh; in-target chsh -s /bin/zsh
d-i preseed/late_command string in-target sh -c 'mkdir -p /home/provis/.ssh && touch /home/provis/.ssh/authorized_keys && chmod 755 /home/provis/.ssh && chmod 600 /home/provis/.ssh/authorized_keys'; in-target echo 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC2BfvcJaV77MMYTw3tln4geUgT8uVUmw1yYb4JOpyIYdNXPwRVLcRMPs1bEm/qVqQFmVOjtL69fCLqkS/fRFZI9XhSgcZTjLdDKSFVvuzwP+yZn78aqGzPoMrSeRGFlr7zwQi0lyMd1jo/94zQCBSmIS3mTechnRVWVPXbCyAXXugDhsGpgUma8i72iJzm6hdyRYav1nXvTVZMGDKnn3y/9YsmOgn5UN+A9DGUkodsN1mkxeqfO9k1TMEsyU6IFbU96bqWHpZrv/zJCm9LcvzZA0318Nxi0nndIsPkK0takzpsk+Yb2JPrrolABEQFuJihks9uDUMHcPCLy9iWQJDP P@WILDSTAR-BOX' > /home/provis/.ssh/authorized_keys;
